{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useGeolocated } from 'react-geolocated';\nconst getLocation = () => {\n  _s();\n  const {\n    coords\n  } = useGeolocated();\n\n  // Check if coordinates are available\n  if (coords) {\n    // Destructure latitude and longitude from coords\n    const {\n      latitude,\n      longitude\n    } = coords;\n    // Return latitude and longitude as an array\n    return [latitude, longitude];\n  } else {\n    // Return null if coordinates are not available\n    return null;\n  }\n};\n_s(getLocation, \"EcHCeB53w/GYYAODiwC1E9LeO0Q=\", false, function () {\n  return [useGeolocated];\n});\nexport default getLocation;","map":{"version":3,"names":["useGeolocated","getLocation","_s","coords","latitude","longitude"],"sources":["/Users/madelinekim/Documents/GitHub/safe_walk_ai/client/src/components/input_boxes/getCurLongLat.js"],"sourcesContent":["import { useGeolocated } from 'react-geolocated';\n\nconst getLocation = () => {\n    const { coords } = useGeolocated();\n\n    // Check if coordinates are available\n    if (coords) {\n        // Destructure latitude and longitude from coords\n        const { latitude, longitude } = coords;\n        // Return latitude and longitude as an array\n        return [latitude, longitude];\n    } else {\n        // Return null if coordinates are not available\n        return null;\n    }\n};\n\nexport default getLocation;"],"mappings":";AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAO,CAAC,GAAGH,aAAa,CAAC,CAAC;;EAElC;EACA,IAAIG,MAAM,EAAE;IACR;IACA,MAAM;MAAEC,QAAQ;MAAEC;IAAU,CAAC,GAAGF,MAAM;IACtC;IACA,OAAO,CAACC,QAAQ,EAAEC,SAAS,CAAC;EAChC,CAAC,MAAM;IACH;IACA,OAAO,IAAI;EACf;AACJ,CAAC;AAACH,EAAA,CAbID,WAAW;EAAA,QACMD,aAAa;AAAA;AAcpC,eAAeC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}