{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useGeolocated}from\"react-geolocated\";import Navbar from\"./components/Navbar/Navbar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[longitude,setLongitude]=useState(null);const[latitude,setLatitude]=useState(null);const[danger,setDanger]=useState(null);// Hook to get geolocation data\nconst{coords}=useGeolocated();// Update latitude and longitude when geolocation data changes\nuseEffect(()=>{if(coords){setLongitude(coords.longitude);setLatitude(coords.latitude);}},[coords]);const handlePredict=async()=>{try{const response=await fetch('http://localhost:5000/predict',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({longitude:longitude,latitude:latitude})});const data=await response.json();setDanger(data.message);}catch(error){console.error('Error predicting danger:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),longitude&&latitude&&/*#__PURE__*/_jsxs(\"div\",{children:[\"Latitude: \",latitude,\", Longitude: \",longitude]}),/*#__PURE__*/_jsx(\"button\",{onClick:handlePredict,children:\"Predict Danger\"})]}),danger!==null&&/*#__PURE__*/_jsx(\"div\",{children:danger})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useGeolocated","Navbar","jsx","_jsx","jsxs","_jsxs","App","longitude","setLongitude","latitude","setLatitude","danger","setDanger","coords","handlePredict","response","fetch","method","headers","body","JSON","stringify","data","json","message","error","console","className","children","onClick"],"sources":["/Users/yasmeen/Documents/GitHub/safe_walk_ai/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useGeolocated } from \"react-geolocated\";\nimport Navbar from \"./components/Navbar/Navbar\"\n\nconst App = () => {\n    const [longitude, setLongitude] = useState(null);\n    const [latitude, setLatitude] = useState(null);\n    const [danger, setDanger] = useState(null);\n\n    // Hook to get geolocation data\n    const { coords } = useGeolocated();\n\n    // Update latitude and longitude when geolocation data changes\n    useEffect(() => {\n        if (coords) {\n            setLongitude(coords.longitude);\n            setLatitude(coords.latitude);\n        }\n    }, [coords]);\n\n    const handlePredict = async () => {\n        try {\n            const response = await fetch('http://localhost:5000/predict', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    longitude: longitude,\n                    latitude: latitude,\n                })\n            });\n            const data = await response.json();\n            setDanger(data.message);\n        } catch (error) {\n            console.error('Error predicting danger:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <div>\n                <Navbar />\n                {longitude && latitude && (\n                    <div>\n                        Latitude: {latitude}, Longitude: {longitude}\n                    </div>\n                )}\n                <button onClick={handlePredict}>\n                    Predict Danger\n                </button>\n            </div>\n            {danger !== null && <div>{danger}</div>}\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,aAAa,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,MAAM,KAAM,4BAA4B,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CACd,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACa,MAAM,CAAEC,SAAS,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAE1C;AACA,KAAM,CAAEe,MAAO,CAAC,CAAGb,aAAa,CAAC,CAAC,CAElC;AACAD,SAAS,CAAC,IAAM,CACZ,GAAIc,MAAM,CAAE,CACRL,YAAY,CAACK,MAAM,CAACN,SAAS,CAAC,CAC9BG,WAAW,CAACG,MAAM,CAACJ,QAAQ,CAAC,CAChC,CACJ,CAAC,CAAE,CAACI,MAAM,CAAC,CAAC,CAEZ,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,+BAA+B,CAAE,CAC1DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjBd,SAAS,CAAEA,SAAS,CACpBE,QAAQ,CAAEA,QACd,CAAC,CACL,CAAC,CAAC,CACF,KAAM,CAAAa,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClCX,SAAS,CAACU,IAAI,CAACE,OAAO,CAAC,CAC3B,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CACpD,CACJ,CAAC,CAED,mBACIpB,KAAA,QAAKsB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAChBvB,KAAA,QAAAuB,QAAA,eACIzB,IAAA,CAACF,MAAM,GAAE,CAAC,CACTM,SAAS,EAAIE,QAAQ,eAClBJ,KAAA,QAAAuB,QAAA,EAAK,YACS,CAACnB,QAAQ,CAAC,eAAa,CAACF,SAAS,EAC1C,CACR,cACDJ,IAAA,WAAQ0B,OAAO,CAAEf,aAAc,CAAAc,QAAA,CAAC,gBAEhC,CAAQ,CAAC,EACR,CAAC,CACLjB,MAAM,GAAK,IAAI,eAAIR,IAAA,QAAAyB,QAAA,CAAMjB,MAAM,CAAM,CAAC,EACtC,CAAC,CAEd,CAAC,CAED,cAAe,CAAAL,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}