{"ast":null,"code":"var _jsxFileName = \"/Users/madelinekim/Desktop/safe_walk_ai/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { geolocated } from \"react-geolocated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = ({\n  isGeolocationAvailable,\n  isGeolocationEnabled,\n  coords\n}) => {\n  _s();\n  const [longitude, setLongitude] = useState(null);\n  const [latitude, setLatitude] = useState(null);\n  const [danger, setDanger] = useState(null);\n\n  // Update latitude and longitude when geolocation data changes\n  useEffect(() => {\n    if (coords) {\n      setLongitude(coords.longitude);\n      setLatitude(coords.latitude);\n    }\n  }, [coords]);\n  const handlePredict = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          longitude: longitude,\n          latitude: latitude\n        })\n      });\n      const data = await response.json();\n      setDanger(data.result);\n    } catch (error) {\n      console.error('Error predicting danger:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Predict Danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), isGeolocationAvailable && isGeolocationEnabled ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [longitude && latitude && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Latitude: \", latitude, \", Longitude: \", longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePredict,\n        children: \"Predict Danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Geolocation is not enabled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this), danger !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Predicted Danger: \", danger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"cO2uJGtMrELA10aNyRbH8etVFwA=\");\n_c = App;\nexport default geolocated({\n  positionOptions: {\n    enableHighAccuracy: true\n  },\n  userDecisionTimeout: 5000\n})(App);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","geolocated","jsxDEV","_jsxDEV","App","isGeolocationAvailable","isGeolocationEnabled","coords","_s","longitude","setLongitude","latitude","setLatitude","danger","setDanger","handlePredict","response","fetch","method","headers","body","JSON","stringify","data","json","result","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","positionOptions","enableHighAccuracy","userDecisionTimeout","$RefreshReg$"],"sources":["/Users/madelinekim/Desktop/safe_walk_ai/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { geolocated } from \"react-geolocated\";\n\nconst App = ({ isGeolocationAvailable, isGeolocationEnabled, coords }) => {\n    const [longitude, setLongitude] = useState(null);\n    const [latitude, setLatitude] = useState(null);\n    const [danger, setDanger] = useState(null);\n\n    // Update latitude and longitude when geolocation data changes\n    useEffect(() => {\n        if (coords) {\n            setLongitude(coords.longitude);\n            setLatitude(coords.latitude);\n        }\n    }, [coords]);\n\n    const handlePredict = async () => {\n        try {\n            const response = await fetch('http://localhost:5000/predict', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    longitude: longitude,\n                    latitude: latitude,\n                })\n            });\n            const data = await response.json();\n            setDanger(data.result);\n        } catch (error) {\n            console.error('Error predicting danger:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Predict Danger</h1>\n            {isGeolocationAvailable && isGeolocationEnabled ? (\n                <div>\n                    {longitude && latitude && (\n                        <div>\n                            Latitude: {latitude}, Longitude: {longitude}\n                        </div>\n                    )}\n                    <button onClick={handlePredict}>\n                        Predict Danger\n                    </button>\n                </div>\n            ) : (\n                <div>Geolocation is not enabled</div>\n            )}\n            {danger !== null && <div>Predicted Danger: {danger}</div>}\n        </div>\n    );\n};\n\nexport default geolocated({\n    positionOptions: {\n        enableHighAccuracy: true,\n    },\n    userDecisionTimeout: 5000,\n})(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}