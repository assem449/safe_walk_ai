{"ast":null,"code":"var _jsxFileName = \"/Users/madelinekim/Desktop/safe_walk_ai/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useGeolocation } from \"react-use\"; // Updated import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [longitude, setLongitude] = useState(null);\n  const [latitude, setLatitude] = useState(null);\n  const [danger, setDanger] = useState(null);\n\n  // Hook to get geolocation data\n  const {\n    latitude: currentLatitude,\n    longitude: currentLongitude\n  } = useGeolocation(); // Updated hook usage\n\n  // Update latitude and longitude when geolocation data changes\n  useEffect(() => {\n    if (currentLatitude && currentLongitude) {\n      setLatitude(currentLatitude);\n      setLongitude(currentLongitude);\n    }\n  }, [currentLatitude, currentLongitude]);\n  const handlePredict = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          longitude: longitude,\n          latitude: latitude\n        })\n      });\n      const data = await response.json();\n      setDanger(data.result);\n    } catch (error) {\n      console.error('Error predicting danger:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Predict Danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [longitude && latitude && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Latitude: \", latitude, \", Longitude: \", longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePredict,\n        children: \"Predict Danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), danger !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Predicted Danger: \", danger]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"qRiE75ZG88lBvZ/mtFFPGcV5UfQ=\", false, function () {\n  return [useGeolocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useGeolocation","jsxDEV","_jsxDEV","App","_s","longitude","setLongitude","latitude","setLatitude","danger","setDanger","currentLatitude","currentLongitude","handlePredict","response","fetch","method","headers","body","JSON","stringify","data","json","result","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/madelinekim/Desktop/safe_walk_ai/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useGeolocation } from \"react-use\"; // Updated import\n\nconst App = () => {\n    const [longitude, setLongitude] = useState(null);\n    const [latitude, setLatitude] = useState(null);\n    const [danger, setDanger] = useState(null);\n\n    // Hook to get geolocation data\n    const { latitude: currentLatitude, longitude: currentLongitude } = useGeolocation(); // Updated hook usage\n\n    // Update latitude and longitude when geolocation data changes\n    useEffect(() => {\n        if (currentLatitude && currentLongitude) {\n            setLatitude(currentLatitude);\n            setLongitude(currentLongitude);\n        }\n    }, [currentLatitude, currentLongitude]);\n\n    const handlePredict = async () => {\n        try {\n            const response = await fetch('http://localhost:5000/predict', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    longitude: longitude,\n                    latitude: latitude,\n                })\n            });\n            const data = await response.json();\n            setDanger(data.result);\n        } catch (error) {\n            console.error('Error predicting danger:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Predict Danger</h1>\n            <div>\n                {longitude && latitude && (\n                    <div>\n                        Latitude: {latitude}, Longitude: {longitude}\n                    </div>\n                )}\n                <button onClick={handlePredict}>\n                    Predict Danger\n                </button>\n            </div>\n            {danger !== null && <div>Predicted Danger: {danger}</div>}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE1C;EACA,MAAM;IAAES,QAAQ,EAAEI,eAAe;IAAEN,SAAS,EAAEO;EAAiB,CAAC,GAAGZ,cAAc,CAAC,CAAC,CAAC,CAAC;;EAErF;EACAD,SAAS,CAAC,MAAM;IACZ,IAAIY,eAAe,IAAIC,gBAAgB,EAAE;MACrCJ,WAAW,CAACG,eAAe,CAAC;MAC5BL,YAAY,CAACM,gBAAgB,CAAC;IAClC;EACJ,CAAC,EAAE,CAACD,eAAe,EAAEC,gBAAgB,CAAC,CAAC;EAEvC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBf,SAAS,EAAEA,SAAS;UACpBE,QAAQ,EAAEA;QACd,CAAC;MACL,CAAC,CAAC;MACF,MAAMc,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCZ,SAAS,CAACW,IAAI,CAACE,MAAM,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,oBACItB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBzB,OAAA;MAAAyB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB7B,OAAA;MAAAyB,QAAA,GACKtB,SAAS,IAAIE,QAAQ,iBAClBL,OAAA;QAAAyB,QAAA,GAAK,YACS,EAACpB,QAAQ,EAAC,eAAa,EAACF,SAAS;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACR,eACD7B,OAAA;QAAQ8B,OAAO,EAAEnB,aAAc;QAAAc,QAAA,EAAC;MAEhC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EACLtB,MAAM,KAAK,IAAI,iBAAIP,OAAA;MAAAyB,QAAA,GAAK,oBAAkB,EAAClB,MAAM;IAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAnDID,GAAG;EAAA,QAM8DH,cAAc;AAAA;AAAAiC,EAAA,GAN/E9B,GAAG;AAqDT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}